{
    "swagger": "2.0",
    "info": {
        "description": "Backend for Recsys program.",
        "title": "Cold Start API",
        "contact": {},
        "version": "1.0"
    },
    "host": "127.0.0.1:8080",
    "basePath": "/api/",
    "paths": {
        "/accounts/login": {
            "post": {
                "description": "Logs in the user by verifying their email and password. Returns a JWT token and user data upon successful login.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "example": "\"example@gmail.com\"",
                        "description": "User's email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"Pa$$w0rd\"",
                        "description": "User's password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged-in user data",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/logout": {
            "post": {
                "description": "Logs out the user by invalidating the JWT token stored in the cookie.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "Logout successful message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/register": {
            "post": {
                "description": "Registers a new user. If the login is empty, returns a temporary UUID. If successful, returns the created user's information, including a UUID, login, email, and other details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "example": "\"Example\"",
                        "description": "User's login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"example@gmail.com\"",
                        "description": "User's email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"Pa$$w0rd\"",
                        "description": "User's password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"Fedor\"",
                        "description": "User's name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"Triphosphate\"",
                        "description": "User's surname",
                        "name": "surname",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"CFD\"",
                        "description": "User's region",
                        "name": "region",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"Moscow\"",
                        "description": "User's city",
                        "name": "city",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registered user information",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or registration failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/accounts/user/": {
            "get": {
                "description": "Authenticate the user by checking the JWT token in the request cookies. If authenticated, return user data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Accounts"
                ],
                "summary": "Authenticate user",
                "responses": {
                    "200": {
                        "description": "Authenticated user data",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/history/": {
            "get": {
                "description": "Retrieves the video history of a user based on their user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video History"
                ],
                "summary": "Get user's video history",
                "parameters": [
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "User's UUID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's video history",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserVideoHistory"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve video history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/history/clear": {
            "post": {
                "description": "It does EXACTLY what it says.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video History"
                ],
                "summary": "Clears user's video history",
                "parameters": [
                    {
                        "example": "\"6686fc28-e98e-4100-a00e-e180f15e5c75\"",
                        "description": "User's UUID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video history cleared successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to clear video history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/history/save": {
            "post": {
                "description": "Adds a video entry to a user's history based on their user ID and video ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video History"
                ],
                "summary": "Save video to user's history",
                "parameters": [
                    {
                        "example": "\"6686fc28-e98e-4100-a00e-e180f15e5c75\"",
                        "description": "User's UUID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "Video's UUID",
                        "name": "video_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video history saved successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to save video history",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/preferences/": {
            "get": {
                "description": "Retrieves all video preferences for a user based on their user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preferences"
                ],
                "summary": "Get User Preferences",
                "parameters": [
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "User's unique identifier",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's video preferences",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserVideoPreference"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve user preferences",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/preferences/save": {
            "post": {
                "description": "Saves the user's preference for a video based on user ID and video ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preferences"
                ],
                "summary": "Save Video Preference",
                "parameters": [
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "User's unique identifier",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"6686fc28-e98e-4100-a00e-e180f15e5c75\"",
                        "description": "Video's unique identifier",
                        "name": "video_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"true\"",
                        "description": "Indicates if the video is liked",
                        "name": "is_liked",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"false\"",
                        "description": "Indicates if the video is disliked",
                        "name": "is_disliked",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message indicating the save was successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to save video preference",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/preferences/update": {
            "post": {
                "description": "Updates the user's preference for a video based on user ID and video ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preferences"
                ],
                "summary": "Update Video Preference",
                "parameters": [
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "User's unique identifier",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"6686fc28-e98e-4100-a00e-e180f15e5c75\"",
                        "description": "Video's unique identifier",
                        "name": "video_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"true\"",
                        "description": "Indicates if the video is liked",
                        "name": "is_liked",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"false\"",
                        "description": "Indicates if the video is disliked",
                        "name": "is_disliked",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message indicating the update was successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update video preference",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/preferences/video/": {
            "get": {
                "description": "Retrieves the user's preference for a video based on user ID and video ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preferences"
                ],
                "summary": "Get User Video Preference",
                "parameters": [
                    {
                        "example": "\"8195aaf7-0108-4d8c-be8d-fc4255686feb\"",
                        "description": "User's unique identifier",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "example": "\"6686fc28-e98e-4100-a00e-e180f15e5c75\"",
                        "description": "Video's unique identifier",
                        "name": "video_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's preference for the specified video",
                        "schema": {
                            "$ref": "#/definitions/models.UserVideoPreference"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve video preference",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/recsys/user": {
            "post": {
                "description": "It does EXACTLY what it says.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Video History"
                ],
                "summary": "retrieves a user with history by their ID",
                "responses": {}
            }
        },
        "/recsys/videos": {
            "post": {
                "description": "This API sends a user object to ML backend providing recommendations based on the user's history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recommendations"
                ],
                "summary": "Get recommended videos for a user",
                "parameters": [
                    {
                        "description": "User's ID",
                        "name": "user_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of recommended videos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Video"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.User": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "video_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserVideoHistory"
                    }
                },
                "video_preferences": {
                    "description": "Stats",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserVideoPreference"
                    }
                }
            }
        },
        "models.UserVideoHistory": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                },
                "videoId": {
                    "type": "string"
                }
            }
        },
        "models.UserVideoPreference": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "isDisliked": {
                    "type": "boolean"
                },
                "isLiked": {
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "videoId": {
                    "type": "string"
                }
            }
        },
        "models.Video": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dislikes": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "video_id": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        }
    }
}